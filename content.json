[{"title":"UILabel+AFNetworking 显示下载百分比","date":"2017-01-22T03:22:17.000Z","path":"2017/01/22/UILabel-AFNetworking-显示下载百分比/","text":"####用处：利用AFNetworking做下载操作的时候，利用UILabel动态显示下载百分比，显示格式如下：百分比%。 ####如何实现：我们调用AFNetworking做下载的时候，一般会创建一个NSURLSessionDownloadTask对象，调用AFURLSessionManager的方法：1234- (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)requestprogress:(NSProgress * __autoreleasing *)progressdestination:(NSURL * (^)(NSURL *targetPath, NSURLResponse *response))destinationcompletionHandler:(void (^)(NSURLResponse *response, NSURL *filePath, NSError *error))completionHandler; NSURLSessionDownloadTask继承于NSURLSessionTask，我们向捕获下载进度，实际就是监听NSURLSessionTask上的countOfBytesReceived和state属性，实时改变UILabel的显示文案即可。 ####源码：UILabel+AFNetworking.h123456789#import &lt;UIKit/UIKit.h&gt;@interface UILabel (AFNetworking)- (void)setProgressWithDownloadProgressOfTask:(NSURLSessionDownloadTask *)task;- (void)removeProgressOfTaskInfo:(NSURLSessionDownloadTask *)task;@end UILabel+AFNetworking.m123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#import &quot;UILabel+AFNetworking.h&quot;static void * AFTaskCountOfBytesReceivedContext = &amp;AFTaskCountOfBytesReceivedContext;@implementation UILabel (AFNetworking)- (void)setProgressWithDownloadProgressOfTask:(NSURLSessionDownloadTask *)task&#123;[task addObserver:self forKeyPath:@&quot;state&quot; options:(NSKeyValueObservingOptions)0 context:AFTaskCountOfBytesReceivedContext];[task addObserver:self forKeyPath:@&quot;countOfBytesReceived&quot; options:(NSKeyValueObservingOptions)0 context:AFTaskCountOfBytesReceivedContext];&#125;- (void)removeProgressOfTaskInfo:(NSURLSessionDownloadTask *)task &#123;if (task) &#123;@try &#123;[task removeObserver:self forKeyPath:@&quot;state&quot;];[task removeObserver:self forKeyPath:@&quot;countOfBytesReceived&quot;];&#125; @catch (NSException *exception) &#123;&#125;&#125;&#125;#pragma mark - NSKeyValueObserving- (void)observeValueForKeyPath:(NSString *)keyPathofObject:(id)objectchange:(__unused NSDictionary *)changecontext:(void *)context&#123;if (context == AFTaskCountOfBytesReceivedContext) &#123;if ([keyPath isEqualToString:NSStringFromSelector(@selector(countOfBytesReceived))]) &#123;if ([object countOfBytesExpectedToReceive] &gt; 0) &#123;dispatch_async(dispatch_get_main_queue(), ^&#123;CGFloat progressValue = (CGFloat)[object countOfBytesReceived] / (CGFloat)[object countOfBytesExpectedToReceive] * 100.0;NSString *progress = [NSString stringWithFormat:@&quot;%lld%%&quot;, (int64_t)progressValue];self.text = progress;&#125;);&#125;&#125;if ([keyPath isEqualToString:NSStringFromSelector(@selector(state))]) &#123;if ([(NSURLSessionTask *)object state] == NSURLSessionTaskStateCompleted) &#123;@try &#123;[object removeObserver:self forKeyPath:NSStringFromSelector(@selector(state))];if (context == AFTaskCountOfBytesReceivedContext) &#123;[object removeObserver:self forKeyPath:NSStringFromSelector(@selector(countOfBytesReceived))];&#125;&#125;@catch (NSException * __unused exception) &#123;&#125;&#125;&#125;&#125;&#125;@end ####用法：1[yourLabel setProgressWithDownloadProgressOfTask:yourDownloadTask]; 监听到下载完成，会自动移除掉obersver，如果想在下载到一半的时候移除监听，调用：1[yourLabel removeProgressOfTaskInfo:yourDownloadTask]; 项目需要，所以写了这样的一个Category，其实相应的还可以做上传的动态监测，AFNetworkging自己也有一个UIKit+AFNetworking的group下实现了很多UIKit下控件关于AFNetworking的Category，大家可以去看下啦~~","tags":[{"name":"kvo AFNetworking","slug":"kvo-AFNetworking","permalink":"http://yoursite.com/tags/kvo-AFNetworking/"}]}]